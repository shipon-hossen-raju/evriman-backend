generator client {
  provider = "prisma-client-js"
}

// Database connection
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// ====================== User ======================
enum LoginType {
  USER
  PARTNER
}

enum VerificationStatus {
  PENDING
  APPROVED
  REJECTED
}

enum UserRole {
  ADMIN
  PARTNER
  USER
  SUPER_ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}

model User {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  userId          String     @unique
  fullName        String
  email           String     @unique
  otp             Int?
  expirationOtp   DateTime?
  password        String
  address         String
  role            UserRole   @default(USER)
  status          UserStatus @default(ACTIVE)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  loginType       LoginType  @default(USER)
  phoneNumber     String
  dob             DateTime
  idDocument      String? // URL to uploaded ID document
  referralCode    String?
  termsAccepted   Boolean    @default(false)
  privacyAccepted Boolean    @default(false)
  isVerified      Boolean    @default(false)
  isDeceased      Boolean    @default(false)

  @@map("users")
}

// ================ Subscription ================

enum DiscountType {
  PERCENTAGE
  FIXED
}

enum UserType {
  ALL
  PAID
  NON_PAID
  SELECTED
}

enum OfferCodeStatus {
  ACTIVE
  INACTIVE
}

// model for subscription
model SubscriptionPlan {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  contactLimit   Int
  isActive       Boolean  @default(true)
  pricingOptions Json
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  offerCodes     OfferCodeSubscriptionPlan[]

  @@map("subscriptions")
}

// offer code model
model OfferCode {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  code            String       @unique

  discountType    DiscountType 
  discountValue   Float

  applicablePlans OfferCodeSubscriptionPlan[]

  userType       UserType
  targetUserId   String[]

  expiresAt      DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isActive  Boolean  @default(true)

  @@map("offer_codes")
}

// explicit join model for many-to-many relation
model OfferCodeSubscriptionPlan {
  id                 String            @id @default(auto()) @map("_id") @db.ObjectId
  offerCode          OfferCode         @relation(fields: [offerCodeId], references: [id])
  offerCodeId        String            @db.ObjectId
  subscriptionPlan   SubscriptionPlan  @relation(fields: [subscriptionPlanId], references: [id])
  subscriptionPlanId String            @db.ObjectId
}
